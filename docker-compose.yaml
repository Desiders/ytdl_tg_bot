services:
  bot:
    container_name: ytdl_tg_bot.bot
    image: desiders/ytdl_tg_bot:2.0.1
    restart: "unless-stopped"
    env_file:
      - ".env"
    environment:
      - CONFIG_PATH=${CONFIG_PATH:-config.toml}
    build:
      context: .
    networks:
      - postgres.network
      - yt_toolkit_api.network
      - yt_pot_provider_api.network
      - telegram_bot_api.network
    volumes:
      - type: bind
        source: ./config.toml
        target: /app/config.toml
      - type: bind
        source: ./yt-dlp
        target: /app/yt-dlp
      - type: bind
        source: ./cookies
        target: /app/cookies
    depends_on:
      - postgres
      - yt_toolkit_api
      - yt_pot_provider_api
      - telegram_bot_api
    mem_limit: $BOT_MEM_LIMIT

  postgres:
    container_name: ytdl_tg_bot.postgres
    image: "postgres:17-alpine"
    hostname: ytdl_tg_bot.postgres
    restart: "unless-stopped"
    expose:
      - "5432"
    ports:
      - "127.0.0.1:${POSTGRES_PORT:-5432}:5432"
    networks:
      - postgres.network
    environment:
      POSTGRES_PASSWORD: $POSTGRES_PASSWORD
      POSTGRES_USER: ${POSTGRES_USER:-$USER}
      POSTGRES_DB: ${POSTGRES_DB:-$USER}
    volumes:
      - postgres.data:/var/lib/postgresql/users:rw
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}"]
      interval: 10s
      timeout: 60s
      retries: 5
      start_period: 10s

  yt_toolkit_api:
    container_name: ytdl_tg_bot.yt_toolkit_api
    image: desiders/yt-toolkit-yt-info-api:0.3.0
    restart: "unless-stopped"
    networks:
      - yt_toolkit_api.network
    expose:
      - "8080"
    ports:
      - "127.0.0.1:${YT_TOOLKIT_PORT:-8080}:8080"

  yt_pot_provider_api:
    container_name: ytdl_tg_bot.yt_pot_provider_api
    image: brainicism/bgutil-ytdlp-pot-provider:latest
    restart: "unless-stopped"
    networks:
      - yt_pot_provider_api.network
    expose:
      - "4416"
    ports:
      - "127.0.0.1:${YT_POT_PROVIDER_PORT:-4416}:4416"

  telegram_bot_api:
    container_name: ytdl_tg_bot.telegram_bot_api
    image: aiogram/telegram-bot-api:latest
    restart: "unless-stopped"
    environment:
      TELEGRAM_API_ID: $TELEGRAM_API_ID
      TELEGRAM_API_HASH: $TELEGRAM_API_HASH
      TELEGRAM_LOCAL: 1
    volumes:
      - telegram_bot_api.data:/var/lib/telegram-bot-api
    networks:
      - telegram_bot_api.network
    expose:
      - "8081"
    ports:
      - "127.0.0.1:${TELEGRAM_BOT_API_PORT:-8081}:8081"

volumes:
  postgres.data: {}
  telegram_bot_api.data: {}

networks:
  postgres.network: {}
  yt_toolkit_api.network: {}
  yt_pot_provider_api.network: {}
  telegram_bot_api.network: {}
