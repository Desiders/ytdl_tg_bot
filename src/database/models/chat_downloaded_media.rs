//! `SeaORM` Entity, @generated by sea-orm-codegen 2.0.0-rc.11

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "chat_downloaded_media")]
pub struct Model {
    #[sea_orm(primary_key, auto_increment = false)]
    pub id: Uuid,
    pub chat_id: Uuid,
    pub downloaded_media: Uuid,
    pub created_at: TimeDateTimeWithTimeZone,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(
        belongs_to = "super::chat::Entity",
        from = "Column::ChatId",
        to = "super::chat::Column::Id",
        on_update = "Cascade",
        on_delete = "Cascade"
    )]
    Chat,
    #[sea_orm(
        belongs_to = "super::downloaded_media::Entity",
        from = "Column::DownloadedMedia",
        to = "super::downloaded_media::Column::Id",
        on_update = "Cascade",
        on_delete = "Cascade"
    )]
    DownloadedMedia,
}

impl Related<super::chat::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Chat.def()
    }
}

impl Related<super::downloaded_media::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::DownloadedMedia.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
